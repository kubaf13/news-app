{"ast":null,"code":"var _jsxFileName = \"/Users/kubaf/Desktop/news-app/src/components/Main/PlayStationNewsPage/PlayStationNewsPage.jsx\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./PlayStationNewsPage.css\";\nimport NewsList from \"../HomePage/NewsList/NewsList\";\nimport SortingDropdown from \"./SortingDropdown\";\nimport moment from \"moment\";\nimport LanguageContext from \"../../../LanguageContext\";\nimport { Icon } from \"semantic-ui-react\";\nimport Footer from \"../../Footer/Footer\";\n\nconst PlayStationNewsPage = () => {\n  const [startDate, setStartDate] = useState(moment().subtract(1, \"months\").toDate());\n  const [endDate, setEndDate] = useState(moment().toDate());\n  const [results, setResults] = useState(null);\n  const [page, setPage] = useState(1);\n  const [pagesNumber, setPagesNumber] = useState(1);\n  const [sorting, setSorting] = useState(\"relevancy\");\n  const contextlang = useContext(LanguageContext);\n  const [lang, setLang] = useState(contextlang);\n  const fetchArticles = useCallback(() => {\n    fetch(`http://localhost:8000/playstation?from=${startDate.toISOString()}&to=${endDate.toISOString()}&page=${page}&sortBy=${sorting}` + (lang === \"us\" ? \"&language=en\" : `&language=${lang}`)).then(response => response.json()).then(res => {\n      setResults(res);\n      setPagesNumber(Math.ceil(res.totalResults / 15));\n    });\n  }, [startDate, endDate, page, sorting, lang]);\n  useEffect(() => {\n    setLang(contextlang);\n    setPage(1);\n  }, [contextlang]);\n  useEffect(() => {\n    fetchArticles();\n  }, [fetchArticles]);\n  if (!results) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PlayStationNewsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sorting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SortingDropdown, {\n    onSortingChange: sorting => {\n      setSorting(sorting);\n      setPage(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Start date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => {\n      setStartDate(date);\n      setPage(1);\n    },\n    dateFormat: \"dd-MM-yyyy\",\n    maxDate: endDate,\n    minDate: moment().subtract(1, \"months\").toDate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    className: \"icon\",\n    name: \"calendar alternate outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"End date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: endDate,\n    onChange: date => {\n      setEndDate(date);\n      setPage(1);\n    },\n    dateFormat: \"dd-MM-yyyy\",\n    maxDate: new Date(),\n    minDate: startDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    className: \"icon\",\n    name: \"calendar alternate outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), results.totalResults !== 0 ? /*#__PURE__*/React.createElement(NewsList, {\n    articles: results.articles.filter((item, index, self) => {\n      return index === self.findIndex(t => t.title === item.title);\n    }),\n    pagesNumber: pagesNumber,\n    onPageChange: setPage,\n    currentPage: page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"No results\"));\n};\n\nexport default PlayStationNewsPage;","map":{"version":3,"sources":["/Users/kubaf/Desktop/news-app/src/components/Main/PlayStationNewsPage/PlayStationNewsPage.jsx"],"names":["React","useState","useEffect","useCallback","useContext","DatePicker","NewsList","SortingDropdown","moment","LanguageContext","Icon","Footer","PlayStationNewsPage","startDate","setStartDate","subtract","toDate","endDate","setEndDate","results","setResults","page","setPage","pagesNumber","setPagesNumber","sorting","setSorting","contextlang","lang","setLang","fetchArticles","fetch","toISOString","then","response","json","res","Math","ceil","totalResults","date","Date","articles","filter","item","index","self","findIndex","t","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./PlayStationNewsPage.css\";\nimport NewsList from \"../HomePage/NewsList/NewsList\";\nimport SortingDropdown from \"./SortingDropdown\";\nimport moment from \"moment\";\nimport LanguageContext from \"../../../LanguageContext\";\nimport { Icon } from \"semantic-ui-react\";\nimport Footer from \"../../Footer/Footer\";\n\nconst PlayStationNewsPage = () => {\n  const [startDate, setStartDate] = useState(\n    moment().subtract(1, \"months\").toDate()\n  );\n  const [endDate, setEndDate] = useState(moment().toDate());\n  const [results, setResults] = useState(null);\n  const [page, setPage] = useState(1);\n  const [pagesNumber, setPagesNumber] = useState(1);\n  const [sorting, setSorting] = useState(\"relevancy\");\n  const contextlang = useContext(LanguageContext);\n  const [lang, setLang] = useState(contextlang);\n\n  const fetchArticles = useCallback(() => {\n    fetch(\n      `http://localhost:8000/playstation?from=${startDate.toISOString()}&to=${endDate.toISOString()}&page=${page}&sortBy=${sorting}` +\n        (lang === \"us\" ? \"&language=en\" : `&language=${lang}`)\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        setResults(res);\n        setPagesNumber(Math.ceil(res.totalResults / 15));\n      });\n  }, [startDate, endDate, page, sorting, lang]);\n\n  useEffect(() => {\n    setLang(contextlang);\n    setPage(1);\n  }, [contextlang]);\n\n  useEffect(() => {\n    fetchArticles();\n  }, [fetchArticles]);\n\n  if (!results) return null;\n\n  return (\n    <div className=\"PlayStationNewsPage\">\n      <div className=\"sorting\">\n        <SortingDropdown\n          onSortingChange={(sorting) => {\n            setSorting(sorting);\n            setPage(1);\n          }}\n        />\n      </div>\n      <div className=\"date\">\n        <div>\n          <div>\n            <label>Start date:</label>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n                setPage(1);\n              }}\n              dateFormat=\"dd-MM-yyyy\"\n              maxDate={endDate}\n              minDate={moment().subtract(1, \"months\").toDate()}\n            />\n            <Icon className=\"icon\" name=\"calendar alternate outline\" />\n          </div>\n        </div>\n        <div>\n          <label>End date:</label>\n          <DatePicker\n            selected={endDate}\n            onChange={(date) => {\n              setEndDate(date);\n              setPage(1);\n            }}\n            dateFormat=\"dd-MM-yyyy\"\n            maxDate={new Date()}\n            minDate={startDate}\n          />\n          <Icon className=\"icon\" name=\"calendar alternate outline\" />\n        </div>\n      </div>\n      {results.totalResults !== 0 ? (\n        <NewsList\n          articles={results.articles.filter((item, index, self) => {\n            return index === self.findIndex((t) => t.title === item.title);\n          })}\n          pagesNumber={pagesNumber}\n          onPageChange={setPage}\n          currentPage={page}\n        />\n      ) : (\n        <h1>No results</h1>\n      )}\n    </div>\n  );\n};\nexport default PlayStationNewsPage;\n"]},"metadata":{},"sourceType":"module"}